# https://github.com/rust-lang/rust/blob/master/.github/workflows/ci.yml
# https://github.com/launchbadge/sqlx/blob/master/.github/workflows/sqlx.yml
# https://github.com/dh1tw/remoteAudio/blob/master/.github/workflows/build.yml
# https://github.com/actions-rs
# TODO: Set CRATE_NAME to match the project name
name: CI
env:
  CRATE_NAME: tivac_rtic

on: [push, pull_request]

jobs:
  check:
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    name: CI Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-check-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-check-

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          target: thumbv7em-none-eabihf

      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --locked

  build:
    needs: check
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          target: thumbv7em-none-eabihf

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked

      - uses: fiam/arm-none-eabi-gcc@v1
        with:
          release: '10-2020-q4' # https://launchpad.net/gcc-arm-embedded/+series
      - run: arm-none-eabi-obj-copy -O binary target/${{ martrix.target }}/release/${{ env.CRATE_NAME }} ${{ env.CRATE_NAME }}.bin

      - uses: actions/upload-artifact@master
        with:
          name: ${{ env.CRATE_NAME }}.bin
          path: ${{ env.CRATE_NAME }}.bin

      - name: Get VERSION
        if: startsWith(github.ref, 'refs/tags/v')
        id: get_version
        shell: bash
        run: |
          echo "::set-output name=VERSION::${GITHUB_REF#refs/tags/}"

      - name: Renaming file before uploading
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
        shell: bash
        run: |
          cp ${{ env.CRATE_NAME }}.bin ${{ env.CRATE_NAME }}-$VERSION.bin

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          draft: true
          prerelease: false
          files: |
            ${{ env.CRATE_NAME }}-${{ steps.get_version.outputs.VERSION }}.bin
            target/${{ martrix.target }}/release/${{ env.CRATE_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
